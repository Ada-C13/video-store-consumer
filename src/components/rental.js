import React, { Component } from 'react';
import PropTypes from 'prop-types';
import axios from 'axios';
import './rental.css';


class RentalCreator extends Component {

  constructor(props) {
    super(props);
    this.state = {
      invalidRental: false
    };
  }

  //need a customer AND movie to be valid
  valid_rental = () => {
      let valid_rental = ( this.props.movieTitle && this.props.customerName )
      console.log("valid_rental is running")
      console.log(valid_rental)
      return (valid_rental)
    }

  onSubmitRental = (event) => {
    event.preventDefault();
    if (this.valid_rental()) {
      this.postRental()
    } else {
      this.setState({
        message: `Pick a customer and a movie first!`,
        invalidRental: true
      })
      console.log("Here is the message generated by the submit attempt:")
      console.log(this.state.message)
      console.log("Here is the state of invalid rental")
      console.log(this.state.invalidRental)
    }
  }

  postRental = () => {
    const BASE_URL = 'http://localhost:3000/rentals/'
    let titleToRent = this.props.movieTitle
    let customerRentingName = this.props.customerName
    let customerRentingParams = { customer_id: this.props.customerID }
    let requestURL = `${BASE_URL}${titleToRent}/check-out`
    console.log("This is the current Request URL:")
    console.log(requestURL)
    console.log("Here are the params being sent")
    console.log(customerRentingParams)
    axios.post(requestURL, customerRentingParams)
    .then((response) => {
        console.log(response)
        this.setState({
          message: `${customerRentingName} just checked out ${titleToRent}!`,
          invalidRental: false
        })
        this.props.clearSpotlightCallback()
      })
    .catch((error) => {
      this.setState({ message: error.message });
    });
  }

  showMessage = () => {
    if (this.state.message) {
     return (this.state.message)
   }
  }

  render() {

    let validOrInvalidRental;
    if (this.state.invalidRental == true) {
      validOrInvalidRental = "error, try again!"
    } else {validOrInvalidRental = "sure can do!" }

    let creatorClasses = `${validOrInvalidRental} rental_creator`;

    return (
      <section className={creatorClasses} onClick={this.onSubmitRental}>
        <h5>CLICK HERE TO CREATE A NEW RENTAL</h5>
        <section className="message-area">
          {this.showMessage()}
        </section>
      </section>
    );
  }
}

RentalCreator.propTypes = {
  customerName: PropTypes.string,
  customerID: PropTypes.number,
  movieTitle: PropTypes.string,
  clearSpotlightCallback: PropTypes.func.isRequired
};

export default RentalCreator;